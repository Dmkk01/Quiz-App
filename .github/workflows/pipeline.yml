name: Deployment pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches: [main]
    types: [opened, synchronize]
    
jobs:
  simple_deployment_pipeline:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - uses: denoland/setup-deno@v1
        with:
          deno-version: "1.11.5"
      - name: Find and Replace
        uses: jacobtomlinson/gha-find-replace@master
        if: ${{ github.event_name == 'push' && !contains(env.COMMIT_MESSAGES, '#skip') }} 
        with:
          find: "passwordValue"
          replace: ${{ secrets.SQL_PASSWORD_VALUE }}
          include: "database/"
      - name: heroku deployment
        uses: akhileshns/heroku-deploy@v3.12.12
        if: ${{ github.event_name == 'push' && !contains(env.COMMIT_MESSAGES, '#skip') }}
        env:
          COMMIT_MESSAGES: ${{ toJson(github.event.commits.*.message) }} 
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: "web-dev-questions-app"
          heroku_email: "dmkk1@outlook.com" 
          healthcheck: "https://web-dev-questions-app.herokuapp.com/health"
          checkstring: "ok"
          rollbackonhealthcheckfailed: true
      - uses: actions/checkout@v2
      - name: Bump version and push tag
        uses: anothrNick/github-tag-action@1.33.0
        if: ${{ github.event_name == 'push' && !contains(env.COMMIT_MESSAGES, '#skip') }} 
        env:
          COMMIT_MESSAGES: ${{ toJson(github.event.commits.*.message) }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DEFAULT_BUMP: patch
      # - name: slack
      #   uses: 8398a7/action-slack@v3
      #   if: always()
      #   with:
      #     status: custom
      #     fields: workflow,job,commit,repo,ref,author,took
      #     custom_payload: |
      #       {
      #         attachments: [{
      #           color: '${{ job.status }}' === 'success' ? 'good' : '${{ job.status }}' === 'failure' ? 'danger' : 'warning',
      #           text: `${process.env.AS_JOB} of ${process.env.AS_REPO} ${{ job.status }} in ${process.env.AS_TOOK}`,
      #         }]
      #       }
      #   env:
      #     SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
         